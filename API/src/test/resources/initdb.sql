CREATE TABLE users (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   username VARCHAR(255),
   password VARCHAR(255),
   token VARCHAR(255),
   CONSTRAINT pk_users PRIMARY KEY (id)
);


CREATE TABLE accounts (
   id VARCHAR(255) NOT NULL,
   user_id INTEGER,
   opened_date TIMESTAMP WITHOUT TIME ZONE,
   closed_date TIMESTAMP WITHOUT TIME ZONE,
   type INTEGER NOT NULL,
   name VARCHAR(255),
   status INTEGER NOT NULL,
   access_level INTEGER NOT NULL,
   CONSTRAINT pk_accounts PRIMARY KEY (id)
);
ALTER TABLE accounts ADD CONSTRAINT FK_ACCOUNTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);


CREATE TABLE settings (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   account_id VARCHAR(255),
   risk_free DOUBLE PRECISION NOT NULL,
   mean_benchmark DOUBLE PRECISION NOT NULL,
   CONSTRAINT pk_settings PRIMARY KEY (id)
);
ALTER TABLE settings ADD CONSTRAINT FK_SETTINGS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);


CREATE TABLE analysis (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   account_id VARCHAR(255),
   securities_uid VARCHAR(255),
   date_from TIMESTAMP WITHOUT TIME ZONE,
   date_to TIMESTAMP WITHOUT TIME ZONE,
   mean DOUBLE PRECISION NOT NULL,
   std_dev DOUBLE PRECISION NOT NULL,
   coef_variation DOUBLE PRECISION NOT NULL,
   coef_sharp DOUBLE PRECISION NOT NULL,
   coef_information DOUBLE PRECISION NOT NULL,
   coef_sortino DOUBLE PRECISION NOT NULL,
   CONSTRAINT pk_analysis PRIMARY KEY (id)
);
ALTER TABLE analysis ADD CONSTRAINT FK_ANALYSIS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);


CREATE OR REPLACE VIEW latest_analysis AS
SELECT a.*
FROM public.analysis a
INNER JOIN (
    SELECT account_id, securities_uid, MAX(date_to) AS max_date_to
    FROM public.analysis
    GROUP BY account_id, securities_uid
) b
ON a.account_id = b.account_id AND a.securities_uid = b.securities_uid AND a.date_to = b.max_date_to;


INSERT INTO users (username, password, token) VALUES ('username', 'password', 'token');
INSERT INTO accounts (id, user_id, opened_date, closed_date, type, name, status, access_level) VALUES
    ('string_id', 1, '2024-01-01T10:00:00Z', '1970-01-01T10:00:00Z', 1, 'Брокерский счёт', 2, 2);
INSERT INTO settings (account_id, risk_free, mean_benchmark) VALUES ('string_id', 0.1, 0.15);
